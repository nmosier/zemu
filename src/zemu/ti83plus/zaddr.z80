#ifndef TI83PLUS_ZADDR_Z80
#define TI83PLUS_ZADDR_Z80

;; zaddr_cp -- compare Z-addresses
;; INPUTS:
;;  [b:hl] = lhs
;;  [c:de] = rhs
;; OUTPUTS: flags
;; ERRORS: no.
;; DESTROYS: (none)
zaddr_cp:
  push af ; save a
  ld a,b
  cp a,c
  ret nz
  ex (sp),hl
  ld a,h ; restore a
  pop hl
  jp cp_hl_de

;; zaddr_inc -- increment Z-address
;; INPUTS:
;;  [b:hl] = Z-address
;; OUTPUTS:
;;  [b:hl] <- [b:hl] + 1
;; ERRORS: no.
;; DESTROYS: (none)
zaddr_inc:
  inc l
  ret z
  inc h
  ret z
  inc b
  ret

;; zaddr_dec -- decrement Z-addr
;; INPUTS:
;;  [b:hl] = Z-addr
;; OUTPUTS:
;;  [b:hl] <- [b:hl] - 1
;; ERRORS: no.
;; DESTROYS: (none)
zaddr_dec:
  call cp_hl_0
  jr nz,_
  dec b
_ dec hl
  ret
  

;; zaddr_add -- add Z-addresses
;; INPUTS:
;;  [b:hl] = lhs Z-address
;;  [c:de] = rhs Z-address
;; OUTPUTS:
;;  [b:hl] <- [b:hl] + [c:de]
;; ERRORS: no.
;; DESTROYS: (none)
zaddr_add:
  push de
  add hl,de
  ld d,a
  ld a,b
  adc a,c
  ld b,a
  ld a,d
  pop de
  ret



;; zaddr_ex -- exchange Z-addresses
;; INPUTS:
;;  [b:hl] = lhs Z-address
;;  [c:de] = rhs Z-address
;; OUTPUTS:
;;  [b:hl] <- [c:de]
;;  [c:de] <- [b:hl]
;; ERRORS: no.
;; DESTROYS: (none)
zaddr_ex:
  ex de,hl
  push af
  ld a,b
  ld b,c
  ld c,a
  pop af
  ret

#endif
