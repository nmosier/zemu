;; zdisp.z80 -- display routines
#include "zdisp.inc"

;; sfont_width -- get width of small font character
;; INPUTS:
;;  a = character
;; OUTPUTS:
;;  c = width of character
;; DESTROYS: (none)
;; ERRORS: no.
sfont_width:
   push hl
   push de
   ld hl,SFONT_TAB_ADDR
   ld de,SFONT_TAB_ENTLEN
   ld d,a
   mlt de
   add hl,de
   ld c,(hl)
   pop de
   pop hl
   ret


;; sys_clrcurrow -- clear cursor row
;; INPUTS:
;;  a = cursor row (0 - 10?)
;; OUTPUTS: (none)
;; DESTROYS: a, b, de
;; ERRORS: no.
sys_clrcurrow:
   rlca
   rlca
   rlca ; a *= 8
   add a,$80
   jp _ClearRow



;; zdisp_rowaddr -- address of row in VRAM
;; INPUTS:
;;  a = row number
;; OUTPUTS:
;;  hl = row address
;; DESTROYS: de
;; ERRORS: no.
zdisp_rowaddr:
   ; lcdWidth = 64 * 5 = 2^6 * 5
   ld hl,0
   ld l,a
   add hl,hl
   add hl,hl
   add hl,hl
   add hl,hl
   add hl,hl
   add hl,hl
   push hl
   add hl,hl
   add hl,hl
   pop de
   add hl,de
   ld de,vRam
   add hl,de
   ret


;; zdisp_pixaddr -- address of pixel in VRAM
;; INPUTS:
;;  a = row number
;;  hl = column number
;; OUTPUTS:
;;  hl = pixel address
;; DESTROYS: de
;; ERRORS: no.
zdisp_pixaddr:
   push hl
   call zdisp_rowaddr
   pop de
   add hl,de
   ret

;; zdisp_fillrect -- fill rectangle
;; INPUTS:
;;  hl = fill value
;;  ix = pointer to zrect
zdisp_fillrect:
   ld (fillRectColor),hl
   ld hl,(ix+ZRECT.ORGCOL)
   ld de,(ix+ZRECT.WIDTH)
   add hl,de
   ex de,hl
   dec de
   ld hl,(ix+ZRECT.ORGCOL)
   ; cols set
   ld a,(ix+ZRECT.ORGROW)
   ld b,a
   add a,(ix+ZRECT.HEIGHT)
   dec a
   ld c,a
   push ix
   call _FillRect
   pop ix
   ret

;; zdisp_init -- do basic initialization of LCD
;; INPUTS: (none)
;; OUTPUTS: (none)
;; ERRORS: no.
;; DESTROYS: a
zdisp_init:
;   ld a,$2D
;   ld (mpLcdRange+lcdCtrl),a
   ret
