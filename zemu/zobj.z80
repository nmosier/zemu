#include "zobj.inc"


;; zobj_tabaddr -- return logical address of object table
;; INPUTS:
;;  zmap_header set
;; OUTPUTS:
;;  ix = logical address of object table
;; ERRORS: yes.
;; DESTROYS:
zobj_tabaddr:
   ld ix,(zmap_header)
   lea hl,ix+ZHDR_OBJTAB
   call zaddr_fetchw
   ret nc ; error
   call wtolu ; zero-extend address
   add ix,de
   lea ix,ix+ZOBJ_PROPDEFAULTS
   scf \ ccf ; success
   ret
   
;; zobj_objaddr -- return logical address of object
;; INPUTS:
;;  a = object number
;; OUTPUTS:
;;  ix = logical address of object
;; ERRORS: yes.
;; DESTROYS: a,hl,de
zobj_objaddr:
   ld l,a
   ld h,ZOBJSIZE
   or a,a
   ld a,ZERR_BADOBJ
   ccf
   ret z ; error: cannot take address of object 0
   mlt hl
   call wtolu
   add ix,de
   scf \ ccf
   ret

;; zobj_attr -- find attribute of object
;; INPUTS:
;;  a = object number
;;  c = attribute number
;; OUTPUTS:
;;  hl = logical address of byte containing attribute
;;  a = mask for extracting bit
;; ERRORS: yes.
;; DESTROYS: (all)
zobj_attr:
   call zobj_objaddr
   ret c
   ; find bit offset within byte
   ; boff <- 8 - (attrno % 8) == (8 - attrno) % 8
   ld a,8
   sub a,c
   and a,$07 ; last 3 bits
   call maskb ; 1 << (c % 8)
   ld b,a
   ld a,c
   cp a,32
   ccf
   ld a,ZERR_BADATTR
   ret c
   ; get logical address of byte containing attribute
   srl c
   srl c
   srl c
   ld de,0
   ld e,c
   lea hl,ix+ZOBJ_ATTRS
   add hl,de ; logical address
   ld a,b ; mask
   scf \ ccf
   ret

;; zobj_attrtest -- test attribute of object
;; INPUTS:
;;  a = object number
;;  c = attribute number
;; OUTPUTS:
;;  zero flag set (Z) if attribute is set, reset (NZ) otherwise
;; ERRORS: yes.
;; DESTROYS: (all)
zobj_attrtest:
   call zobj_attr
   ret c
   call zaddr_to_paddr
   ret c
   and a,(hl)
   ret

;; zobj_attrclear -- clear attribute of object
;; INPUTS:
;;  a = object number
;;  c = attribute number
;; OUTPUTS: (none)
;; ERRORS: yes.
;; DESTROYS: (All)
zobj_attrclear:
   call zobj_attr
   ret c
   call zaddr_to_paddr
   ret c
   cpl
   and a,(hl)
   ld (hl),a
   ret

;; zobj_attrset -- set attribute of object
;; INPUTS:
;;  a = object number
;;  c = attribute number
;; OUTPUTS: (none)
;; ERRORS: yes.
;; DESTROYS: (all)
zobj_attrset:
   call zobj_attr
   ret c
   call zaddr_to_paddr
   ret c
   or a,(hl)
   ld (hl),a
   ret
